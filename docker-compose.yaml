version: '3.8'

services:
  sqlserver:
    container_name: aws_labs_sqlserver
    build:
      context: ./docker_assets/db/
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - aws_labs_network

  zookeeper:
    container_name: aws_labs_zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - aws_labs_network

  kafka:
    container_name: aws_labs_kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_HOSTNAME=kafka
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:29092,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181

    depends_on:
      - zookeeper
    networks:
      - aws_labs_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: aws_labs_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=producer_aws_labs_kafka_ui_cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - aws_labs_network

  python-producer:
    container_name: aws_labs_producer
    depends_on:
      - kafka-ui
    build:
      context: ./docker_assets/producer/
    networks:
      - aws_labs_network

  python_api:
    container_name: aws_labs_api
    build:
      context: ./docker_assets/api/
    ports:
      - "8000:8000"
    networks:
      - aws_labs_network

volumes:
  sql_data:

networks:
  aws_labs_network:
    external: true
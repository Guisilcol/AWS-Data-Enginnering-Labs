version: '3.8'

services:
  sqlserver:
    container_name: aws_labs_sqlserver
    build:
      context: ./docker_assets/db/
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql

  zookeeper:
    container_name: aws_labs_zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: aws_labs_kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_PORT=30000
      - KAFKA_CREATE_TOPICS=ticket_sales:1:1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=aws_labs_kafka_ui_cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  python_api:
    container_name: aws_labs_api
    build:
      context: ./docker_assets/api/
    ports:
      - "8000:8000"

  python_producer:
    container_name: aws_labs_producer
    build:
      context: ./docker_assets/producer/

volumes:
  sql_data:
